@using Food_Delivery.Models
@model List<FoodList>
@{
    ViewData["Title"] = "GetAllFood";

}
<div class="container-fluid " style="margin-left:5%;">
    <div class="row row-cols-3 row-cols-sm-3 row-cols-md-3 row-cols-lg-3">

        @foreach (FoodList item in Model)
        {


            <div class="card me-2 mt-2 " style="width:30%;border-radius:5%">

                <img style=" width: 280px;border-radius:6%; height: 280px;margin-left:10%;margin-top:5%;margin-bottom:5%" src="/css/Image/@item.ImageId" multiple />


                <p>Food Name: @item.FoodName </p>
                <div class="row ms-lg-3">

                    <div class="col-md-7">Food Type: @item.Type </div>
                    <div class="col-md-4 offset-0  btn " style="background-color:#FFA500" >
                        <a style="color:white" href="/OrderDetailMvc/AddCart/@item.FoodId">
                            Add 
                        </a>
                    </div>
                  
                </div>

                <p>Price   ₹ @item.Price  </p>


            </div>

        }

    </div>

</div>
<style>
    p {
        margin-left: 30px;
    }
</style>


<script>

    function addToCart(FoodId) {
        const existing = localStorage.getItem('basket');
        const shoppingCart = [];
        if (existing)
        {
            try 
            {
                shoppingCart.push(...JSON.parse(existing))
            }
            catch (err) 
            { 
                console.error('ERROR deserializing basket', err); 
            }
        }
        shoppingCart.push(FoodId);
        localStorage.setItem('basket', JSON.stringify(shoppingCart));
    }
    function replaceCart(shoppingCart)
    {
        localStorage.setItem('cart', JSON.stringify(shoppingCart));
    }
    
   
</script>